---
title: "Lord Howe Island Group"
description: "Post description"
image: site_64217.png
title-block-style: none
---
```{r include=FALSE}
target_site <- 64217
```

```{=html}
<style>
#title-block-header {
    margin-block-end: 1rem;
    position: relative;
    margin-top: -1px;
    display: none;
}
</style>
```

::: {.grid}
::: {.g-col-5}
<br>
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
mhs_sites <- sf::st_read("../../data/shapefiles/WorldMarineHeritageSites_v2.shp", quiet = T)
mhs_sites <- mhs_sites %>% filter(MRGID == target_site)

library(leaflet)
leaflet(mhs_sites, height = 200) %>% addTiles() %>%
  addPolygons(label = mhs_sites$FULL_NAME)
```
:::
::: {.g-col-7}
## `r mhs_sites$FULL_NAME[1]`

Country/region: **`r mhs_sites$COUNTRY[1]`**

Approximate area: **`r mhs_sites$AREA_KM2[1]`**

Mean temperature over the year (2021): 21.4 °C
:::
:::

## Temperature profile

How is temperature varying in the sites? Data extracted from the Global Ocean OSTIA Sea Surface Temperature and Sea Ice Analysis for the period of 1992 to 2021.

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(dygraphs)
library(xts)

sites_metrics <- arrow::read_parquet("../../data/sst/current/mhs_sst_current.parquet")

sites_metrics$time <- lubridate::as_date(sites_metrics$time)

sites_metrics_mon <- sites_metrics %>%
  group_by(MRGID, month = month(time), year = year(time)) %>%
  summarise(mean = mean(mean), sd = mean(sd), max = mean(max), min = mean(min), median = mean(median)) %>%
  ungroup() %>%
  group_by(MRGID) %>%
  mutate(general_mean = mean(mean)) %>%
  mutate(detrend = mean - general_mean) %>%
  mutate(day = 1) %>%
  unite(date, c("day", "month", "year"), sep = "-") %>%
  mutate(date = as_date(date, format = "%d-%m-%Y")) %>%
  select(-general_mean)

sites_metrics_mon <- sites_metrics_mon %>% filter(MRGID == target_site)

group_a <- sites_metrics_mon %>%
  ungroup() %>%
  select(date, mean, sd) %>%
  mutate(upr = mean+sd, lwr = mean-sd) %>%
  select(-sd)

smetric_a <- xts(x = group_a, order.by = group_a$date)

(p1 <- dygraph(smetric_a, group = "sst_mon", main = "Mean monthly temperature") %>%
    dySeries(c("lwr", "mean", "upr"), label = mhs_sites$FULL_NAME[1]) %>%
    dyOptions(labelsUTC = TRUE, fillGraph=FALSE, fillAlpha=0.1, drawGrid = FALSE,
              colors = "#1F9C87") %>%
    dyAxis("y", label = "Temperature (°C)") %>%
    dyRangeSelector(fillColor = "#D6D6D6", strokeColor = "") %>%
    dyCrosshair(direction = "vertical") %>%
    dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE,
                highlightSeriesOpts = list(strokeWidth = 2))  #%>%
  #dyRoller(rollPeriod = 1)
)
```

<br>
Add explanation

```{r echo=FALSE, message=FALSE, warning=FALSE}
sites_metrics_year <- sites_metrics %>%
  group_by(MRGID, year = year(time)) %>%
  summarise(mean = mean(mean), sd = mean(sd), max = mean(max), min = mean(min), median = mean(median)) %>%
  ungroup() %>%
  group_by(MRGID) %>%
  mutate(general_mean = mean(mean)) %>%
  mutate(detrend = mean - general_mean) %>%
  mutate(day = 1, month = 1) %>%
  unite(date, c("day", "month", "year"), sep = "-") %>%
  mutate(date = as_date(date, format = "%d-%m-%Y")) %>%
  select(-general_mean)

sites_metrics_year <- sites_metrics_year %>% filter(MRGID == target_site)

group_b <- sites_metrics_year %>%
  ungroup() %>%
  select(date, mean, sd) %>%
  mutate(upr = mean+sd, lwr = mean-sd) %>%
  select(-sd)

group_c <- sites_metrics_year %>%
  ungroup() %>%
  select(date, detrend)

smetric_b <- xts(x = group_b, order.by = group_b$date)
smetric_c <- xts(x = group_c, order.by = group_c$date)



(p2 <- dygraph(smetric_b, group = "sst", main = "Mean yearly temperature") %>%
    dySeries(c("lwr", "mean", "upr"), label = mhs_sites$FULL_NAME[1]) %>%
    dyOptions(labelsUTC = TRUE, fillGraph=FALSE, fillAlpha=0.1, drawGrid = FALSE,
              colors = "#3980AB") %>%
    dyAxis("y", label = "Temperature (°C)") %>%
    dyRangeSelector(fillColor = "#D6D6D6", strokeColor = "") %>%
    dyCrosshair(direction = "vertical") %>%
    dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE,
                highlightSeriesOpts = list(strokeWidth = 2))  #%>%
  #dyRoller(rollPeriod = 1)
)
```

<br>

```{r echo=FALSE, message=FALSE, warning=FALSE}
(p3 <- dygraph(smetric_c, group = "sst", main = "Yearly temperature anomaly") %>%
    dySeries(name = "detrend", label = mhs_sites$FULL_NAME[1]) %>%
    dyOptions(labelsUTC = TRUE, fillGraph=FALSE, fillAlpha=0.1, drawGrid = FALSE,
              colors = "#3980AB") %>%
    dyAxis("y", label = "Temperature (°C)", valueRange = range((ceiling(min(group_c$detrend))-0.5), (ceiling(max(group_c$detrend))))) %>%
    dyRangeSelector(fillColor = "#D6D6D6", strokeColor = "") %>%
    dyCrosshair(direction = "vertical") %>%
    dyLimit(0, color = "darkgrey") %>%
   #  dyShading(from = (ceiling(min(group_c$detrend))-0.5), to = 0, color = "#1093C8", axis = "y") %>%
   # dyShading(from = 0, to = ceiling(max(group_c$detrend)), color = "#C72B10", axis = "y") %>%
    dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE,
                highlightSeriesOpts = list(strokeWidth = 2))  #%>%
  #dyRoller(rollPeriod = 1)
)
```



```{r include=FALSE}
bbox <- sf::st_bbox(mhs_sites)

yscale <- seq(round(bbox["ymin"], 1), bbox["ymax"], by = 0.5)
if (length(yscale) == 1) {
  yscale <- c(yscale, round(bbox["ymax"], 1))
}

xscale <- seq(round(bbox["xmin"], 1), bbox["xmax"], by = 0.5)
if (length(xscale) == 1) {
  xscale <- c(xscale, round(bbox["xmax"], 1))
}

p <- ggplot() +
  geom_sf(data = mhs_sites, fill = "#0277d4") +
  coord_sf() +
  theme_light() +
  scale_y_continuous(breaks = yscale) +
  scale_x_continuous(breaks = xscale) +
  theme(panel.border = element_blank(),
        text = element_text(size = 18))

ggsave(paste0("site_", target_site, ".png"), p)
```


## Temperature trends

Mann-Kendall test. To be improved!

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(Kendall)

mk_metric <- MannKendall(smetric_b$mean)

lin_data <- data.frame(date = 1:nrow(smetric_b), mean = smetric_b$mean)

lmod <- lm(mean ~ date, data = lin_data)

ggplot(smetric_b, aes(x = as_date(date), y = as.numeric(mean))) +
  geom_line() +
  #geom_smooth() +
  geom_smooth(method = "lm", se = T, color = "#0277d4") +
  ylab("Mean temperature (°C)") + xlab("Time") +
  geom_label(data = data.frame(x = as_date("1995-01-01"), y = 27.6, label = paste("tau =", round(mk_metric$tau, 2), "- p =", round(mk_metric$sl, 5))),
             aes(x = x, y = y, label = label)) +
  theme_light()
```

## Temperature ranges

```{r echo=FALSE, message=FALSE, warning=FALSE}
year_ranges <- sites_metrics %>%
  group_by(MRGID, year = year(time)) %>%
  summarise(max = max(mean), min = min(mean)) %>%
  ungroup() %>%
  group_by(MRGID) %>%
  summarise(mmax_year = mean(max),
            sdmax_year = sd(max),
            mmin_year = mean(min),
            sdmin_year = sd(min)) %>%
  filter(MRGID == target_site)

sst_ranges <- data.frame(
  range_max = max(sites_metrics$mean),
  range_min = min(sites_metrics$mean),
  mean_year_max = year_ranges$mmax_year,
  mean_year_max_sd = year_ranges$sdmax_year,
  mean_year_min = year_ranges$mmin_year,
  mean_year_min_sd = year_ranges$sdmin_year
)

knitr::kable(sst_ranges, digits = 2,
             col.names = c("Maximum (period)", "Minimum (period)", "Mean yearly maximum", "SD yearly maximum", "Mean yearly minimum", "SD yearly minimum"))
```
